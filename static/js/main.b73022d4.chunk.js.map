{"version":3,"sources":["components/App/App.js","index.js"],"names":["API_ENDPOINT","Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Message","author","time","children","App","useState","messages","setMessages","apiError","setApiError","value","setValue","isLoadingPostMessage","setIsLoadingPostMessage","getComments","fetch","then","res","json","data","console","log","catch","err","message","toString","Loading","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","length","map","Date","Number","createdAt","toLocaleString","id","ReactDOM","render","theme","colors","primary","secondary","document","getElementById"],"mappings":"0OAKMA,EAAe,8CACfC,EAAOC,IAAOC,IAAV,gEAIJC,EAAQF,IAAOG,GAAV,4CAGLC,EAAcJ,IAAOK,KAAV,iDAIXC,EAAkBN,IAAOO,SAAV,+DAIfC,EAAeR,IAAOS,OAAV,wEAKZC,EAAcV,IAAOC,IAAV,iDAIXU,EAAmBX,IAAOC,IAAV,sJAUhBW,EAAcZ,IAAOC,IAAV,4IAOXY,EAAgBb,IAAOC,IAAV,gDAIba,EAAcd,IAAOC,IAAV,0BAEXc,EAAcf,IAAOC,IAAV,oEAKXe,EAAehB,IAAOC,IAAV,8DAIlB,SAASgB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACT,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,cAACJ,EAAD,UAAcK,OAEhB,cAACJ,EAAD,UAAcK,OAWL,SAASC,IACtB,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwDN,oBAAS,GAAjE,mBAAOO,EAAP,KAA6BC,EAA7B,KAyCMC,EAAc,WAClB,OAAOC,MAAM,GAAD,OAAIlC,EAAJ,iCACTmC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAI,QACZd,EAAYY,MAEbG,OAAM,SAACC,GACNd,EAAYc,EAAIC,QAAQC,gBAIxBC,EAAU3C,IAAOC,IAAV,uQAkBb,OAJA2C,qBAAU,WACRb,MACA,IAGA,eAAChC,EAAD,WACG8B,GAAwB,cAACc,EAAD,yBACzB,cAACzC,EAAD,iCACA,eAACE,EAAD,CAAayC,SArEQ,SAAAC,GACvBA,EAAEC,iBACElB,IAGJC,GAAwB,GACxBE,MAAMlC,EAAc,CAClBkD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACjBC,SAAU,OACVH,KAAMvB,MAGXM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,GAAwB,GACR,IAAZM,EAAKkB,IACP5B,EAAYU,EAAKK,SAEnBb,EAAS,IACTG,OAEDQ,OAAM,SAAAC,GACLV,GAAwB,GACxBJ,EAAYc,EAAIE,iBA0ChB,UACE,cAACpC,EAAD,CAAiBqB,MAAOA,EAAO4B,SA1ER,SAAAT,GAC3BlB,EAASkB,EAAEU,OAAO7B,QAyEiD8B,QAvCzC,SAAAX,GAC1BpB,EAAY,OAsCqFgC,KAAM,KACnG,cAAClD,EAAD,0CAEDiB,GACC,cAACT,EAAD,UACGS,IAGL,eAACf,EAAD,WACCa,GAAgC,IAApBA,EAASoC,QAAgB,6CACrCpC,GAAYA,EAASqC,KAAI,SAAAnB,GAAO,OAC/B,cAACxB,EAAD,CAA0BC,OAAQuB,EAAQY,SAAUlC,KAAM,IAAI0C,KAAKC,OAAOrB,EAAQsB,YAAYC,iBAA9F,SACGvB,EAAQS,MADGT,EAAQwB,aC/J9BC,IAASC,OACP,cAAC,IAAD,CAAeC,MARH,CACZC,OAAQ,CACNC,QAAS,UACTC,UAAW,YAKb,SACE,cAAClD,EAAD,MAEFmD,SAASC,eAAe,W","file":"static/js/main.b73022d4.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments'\nconst Page = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`\nconst Title = styled.h1`\n  color: #333;\n`\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`\nconst SubmitButton = styled.button`\n  margin-top: 16px;\n  border-radius: 5px;\n`\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`\n\nconst MessageContainer = styled.div`\n  border-radius: 5px;\n  border: 1px black solid;\n  padding: 5px;\n\n  &:not(:first-child) {\n    margin-top: 8px;\n  }\n`\n\nconst MessageHead = styled.div`\n  display: flex;\n  border-bottom: 1px black solid;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst MessageAuthor = styled.div`\n  font-size: 14px;\n`\n\nconst MessageTime = styled.div``\n\nconst MessageBody = styled.div`\n  margin-top: 5px;\n  font-size: 16px;\n`\n\nconst ErrorMessage = styled.div`\n margin-top: 16px;\n color: red;\n`\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  )\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState(null)\n  const [apiError, setApiError] = useState(null)\n  const [value, setValue] = useState()\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\n\n  const handleTextAreaChange = e => {\n    setValue(e.target.value)\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    if (isLoadingPostMessage) {\n      return\n    }\n    setIsLoadingPostMessage(true)\n    fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n          nickname: 'huli',\n          body: value\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      setIsLoadingPostMessage(false)\n      if (data.ok === 0) {\n        setApiError(data.message)\n      }\n      setValue('')\n      getComments()\n    })\n    .catch(err => {\n      setIsLoadingPostMessage(false)\n      setApiError(err.toString())\n    })\n  }\n\n  const handleTextAreaFocus = e => {\n    setApiError(null)\n  }\n\n  const getComments = () => {\n    return fetch(`${API_ENDPOINT}?_sort=createdAt&_order=desc`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('done')\n        setMessages(data)\n      })\n      .catch((err) => {\n        setApiError(err.message.toString())\n      })\n  }\n\n  const Loading = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n    font-size: 30px;\n    color: white\n  `\n\n  useEffect(() => {\n    getComments()\n  },[])\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea value={value} onChange={handleTextAreaChange} onFocus={handleTextAreaFocus} rows={10}/>\n        <SubmitButton>送出留言</SubmitButton>\n      </MessageForm>\n      {apiError && (\n        <ErrorMessage>\n          {apiError}\n        </ErrorMessage>\n      )}\n      <MessageList>\n      {messages && messages.length === 0 && <div>No message</div>}\n      {messages && messages.map(message => (\n        <Message key={message.id} author={message.nickname} time={new Date(Number(message.createdAt)).toLocaleString()}>\n          {message.body}\n        </Message>\n      ))}\n      </MessageList>\n    </Page>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ThemeProvider } from 'styled-components';\nconst theme = {\n  colors: {\n    primary: '#8600FF',\n    secondary: '#FF0080'\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}